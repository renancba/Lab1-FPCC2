# Combinar as tabelas
dados_combinados <- left_join(cursos, estados, by = c("uf_busca" = "subdivision"))
# Limpeza dos dados para evitar caracteres especiais
dados_combinados$grau <- gsub("[^[:alnum:] [:space:] ]", "", dados_combinados$grau)
# Filtrar cursos tecnológicos (buscando a palavra "Tecnológico" na coluna grau)
dados_filtros <- dados_combinados %>%
filter(grepl("Tecnológico", grau, ignore.case = TRUE))
# Carregar as bibliotecas necessárias
library(dplyr)
library(readr)
library(ggplot2)
library(tidyr)
library(stringr)
# Carregar os dados
cursos <- readr::read_csv("..\\Dados Lab1\\cursos-prouni.csv")
estados <- readr::read_csv("..\\Dados Lab1\\estados.csv")
# Combinar as tabelas
dados_combinados <- left_join(cursos, estados, by = c("uf_busca" = "subdivision"))
# Filtrar cursos tecnológicos (buscando a palavra "Tecnológico" na coluna grau)
dados_filtros <- dados_combinados %>%
filter(grepl("Tecnológico", grau, ignore.case = TRUE))
# Carregar as bibliotecas necessárias
library(dplyr)
library(readr)
library(ggplot2)
library(tidyr)
library(stringr)
# Carregar os dados
cursos <- readr::read_csv("..\\Dados Lab1\\cursos-prouni.csv")
estados <- readr::read_csv("..\\Dados Lab1\\estados.csv")
# Combinar as tabelas
dados_combinados <- left_join(cursos, estados, by = c("uf_busca" = "subdivision"))
# Limpar possíveis caracteres especiais ou quebras de linha na coluna grau
dados_combinados$grau <- gsub("\n", " ", dados_combinados$grau)
dados_combinados$grau <- trimws(dados_combinados$grau)  # Remover espaços extras
# Verificar os valores únicos da coluna grau após limpeza
unique(dados_combinados$grau)
# Filtrar cursos tecnológicos (buscando a palavra "Tecnológico" na coluna grau)
dados_filtros <- dados_combinados %>%
filter(grepl("Tecnológico", grau, ignore.case = TRUE))
# Carregar as bibliotecas necessárias
library(dplyr)
library(readr)
library(ggplot2)
library(tidyr)
library(stringr)
# Carregar os dados
cursos <- readr::read_csv("..\\Dados Lab1\\cursos-prouni.csv")
estados <- readr::read_csv("..\\Dados Lab1\\estados.csv")
# Combinar as tabelas
dados_combinados <- left_join(cursos, estados, by = c("uf_busca" = "subdivision"))
# Filtrar cursos tecnológicos (buscando a palavra "Tecnológico" na coluna grau)
dados_filtros <- dados_combinados %>%
filter(str_detect(grau, "Tecnológico", negate = FALSE))
# Calcular o total de bolsas por modalidade e curso
dados_bolsas_modalidade <- dados_filtros %>%
gather(key = "modalidade", value = "total_bolsas",
bolsa_integral_cotas, bolsa_integral_ampla,
bolsa_parcial_cotas, bolsa_parcial_ampla) %>%
group_by(nome, modalidade) %>%
summarise(total_bolsas_modalidade = sum(total_bolsas, na.rm = TRUE)) %>%
ungroup()
# Calcular o total de bolsas por curso
dados_bolsas_total <- dados_bolsas_modalidade %>%
group_by(nome) %>%
summarise(total_bolsas_modalidade = sum(total_bolsas_modalidade, na.rm = TRUE), .groups = "drop")
# Calcular o percentual de bolsas por modalidade em relação ao total de bolsas por curso
dados_bolsas_modalidade <- dados_bolsas_modalidade %>%
left_join(dados_bolsas_total, by = "nome") %>%
mutate(percentual_bolsas = (total_bolsas_modalidade / total_bolsas_modalidade) * 100)
# Carregar as bibliotecas necessárias
library(dplyr)
library(readr)
library(ggplot2)
library(tidyr)
library(stringr)
# Carregar os dados
cursos <- readr::read_csv("..\\Dados Lab1\\cursos-prouni.csv")
estados <- readr::read_csv("..\\Dados Lab1\\estados.csv")
# Combinar as tabelas
dados_combinados <- left_join(cursos, estados, by = c("uf_busca" = "subdivision"))
# Filtrar cursos tecnológicos (buscando a palavra "Tecnológico" na coluna grau)
dados_filtros <- dados_combinados %>%
filter(str_detect(grau, "Tecnológico", negate = FALSE))
# Calcular o total de bolsas por modalidade e curso
dados_bolsas_modalidade <- dados_filtros %>%
gather(key = "modalidade", value = "total_bolsas",
bolsa_integral_cotas, bolsa_integral_ampla,
bolsa_parcial_cotas, bolsa_parcial_ampla) %>%
group_by(nome, modalidade) %>%
summarise(total_bolsas_modalidade = sum(total_bolsas, na.rm = TRUE)) %>%
ungroup()
# Calcular o total de bolsas por curso
dados_bolsas_total <- dados_bolsas_modalidade %>%
group_by(nome) %>%
summarise(total_bolsas_total = sum(total_bolsas_modalidade, na.rm = TRUE), .groups = "drop")
# Calcular o percentual de bolsas por modalidade em relação ao total de bolsas por curso
dados_bolsas_modalidade <- dados_bolsas_modalidade %>%
left_join(dados_bolsas_total, by = "nome") %>%
mutate(percentual_bolsas = (total_bolsas_modalidade / total_bolsas_total) * 100)
# Exibir a tabela com os percentuais
dados_bolsas_modalidade %>%
select(nome, modalidade, percentual_bolsas) %>%
arrange(desc(percentual_bolsas)) %>%
kable(format = "html", caption = "Percentual de Bolsas por Modalidade para Cursos Tecnológicos") %>%
kable_styling(
full_width = FALSE,
position = "center",
font_size = 16,
bootstrap_options = c("striped", "hover", "condensed")
) %>%
column_spec(1, bold = TRUE, color = "white", background = "#0073e6") %>%
column_spec(2, bold = TRUE, color = "black", background = "#f2f2f2") %>%
column_spec(3, bold = TRUE, color = "black", background = "#f2f2f2") %>%
row_spec(0, bold = TRUE, font_size = 18, color = "black", background = "#e6e6e6")
# Carregar as bibliotecas necessárias
library(dplyr)
library(readr)
library(ggplot2)
library(tidyr)
library(stringr)
# Carregar os dados
cursos <- readr::read_csv(normalizePath("..\\Dados Lab1\\cursos-prouni.csv"))
estados <- readr::read_csv(normalizePath("..\\Dados Lab1\\estados.csv"))
# Combinar as tabelas
dados_combinados <- left_join(cursos, estados, by = c("uf_busca" = "subdivision"))
# Filtrar cursos tecnológicos (buscando a palavra "Tecnológico" na coluna grau)
dados_filtros <- dados_combinados %>%
filter(str_detect(grau, "Tecnológico", negate = FALSE))
# Calcular o total de bolsas por modalidade e curso
dados_bolsas_modalidade <- dados_filtros %>%
gather(key = "modalidade", value = "total_bolsas",
bolsa_integral_cotas, bolsa_integral_ampla,
bolsa_parcial_cotas, bolsa_parcial_ampla) %>%
group_by(nome, modalidade) %>%
summarise(total_bolsas_modalidade = sum(total_bolsas, na.rm = TRUE)) %>%
ungroup()
# Calcular o total de bolsas por curso
dados_bolsas_total <- dados_bolsas_modalidade %>%
group_by(nome) %>%
summarise(total_bolsas_total = sum(total_bolsas_modalidade, na.rm = TRUE), .groups = "drop")
# Calcular o percentual de bolsas por modalidade em relação ao total de bolsas por curso
dados_bolsas_modalidade <- dados_bolsas_modalidade %>%
left_join(dados_bolsas_total, by = "nome") %>%
mutate(percentual_bolsas = (total_bolsas_modalidade / total_bolsas_total) * 100)
# Exibir a tabela com os percentuais
dados_bolsas_modalidade %>%
select(nome, modalidade, percentual_bolsas) %>%
arrange(desc(percentual_bolsas)) %>%
kable(format = "html", caption = "Percentual de Bolsas por Modalidade para Cursos Tecnológicos") %>%
kable_styling(
full_width = FALSE,
position = "center",
font_size = 16,
bootstrap_options = c("striped", "hover", "condensed")
) %>%
column_spec(1, bold = TRUE, color = "white", background = "#0073e6") %>%
column_spec(2, bold = TRUE, color = "black", background = "#f2f2f2") %>%
column_spec(3, bold = TRUE, color = "black", background = "#f2f2f2") %>%
row_spec(0, bold = TRUE, font_size = 18, color = "black", background = "#e6e6e6")
# Carregar as bibliotecas necessárias
library(dplyr)
library(readr)
library(ggplot2)
library(tidyr)
library(stringr)
# Carregar os dados
cursos <- readr::read_csv(normalizePath("..\\Dados Lab1\\cursos-prouni.csv"))
estados <- readr::read_csv(normalizePath("..\\Dados Lab1\\estados.csv"))
# Combinar as tabelas
dados_combinados <- left_join(cursos, estados, by = c("uf_busca" = "subdivision"))
# Filtrar cursos tecnológicos (buscando a palavra "Tecnológico" na coluna grau)
dados_filtros <- dados_combinados %>%
filter(str_detect(grau, "Tecnológico", negate = FALSE))
# Calcular o total de bolsas por modalidade e curso
dados_bolsas_modalidade <- dados_filtros %>%
gather(key = "modalidade", value = "total_bolsas",
bolsa_integral_cotas, bolsa_integral_ampla,
bolsa_parcial_cotas, bolsa_parcial_ampla) %>%
group_by(nome, modalidade) %>%
summarise(total_bolsas_modalidade = sum(total_bolsas, na.rm = TRUE)) %>%
ungroup()
# Calcular o total de bolsas por curso
dados_bolsas_total <- dados_bolsas_modalidade %>%
group_by(nome) %>%
summarise(total_bolsas_total = sum(total_bolsas_modalidade, na.rm = TRUE), .groups = "drop")
# Calcular o percentual de bolsas por modalidade em relação ao total de bolsas por curso
dados_bolsas_modalidade <- dados_bolsas_modalidade %>%
left_join(dados_bolsas_total, by = "nome") %>%
mutate(percentual_bolsas = (total_bolsas_modalidade / total_bolsas_total) * 100)
# Exibir a tabela com os percentuais
dados_bolsas_modalidade %>%
select(nome, modalidade, percentual_bolsas) %>%
arrange(desc(percentual_bolsas)) %>%
kable(format = "html", caption = "Percentual de Bolsas por Modalidade para Cursos Tecnológicos") %>%
kable_styling(
full_width = FALSE,
position = "center",
font_size = 16,
bootstrap_options = c("striped", "hover", "condensed")
) %>%
column_spec(1, bold = TRUE, color = "white", background = "#0073e6") %>%
column_spec(2, bold = TRUE, color = "black", background = "#f2f2f2") %>%
column_spec(3, bold = TRUE, color = "black", background = "#f2f2f2") %>%
row_spec(0, bold = TRUE, font_size = 18, color = "black", background = "#e6e6e6")
# Carregar as bibliotecas necessárias
library(dplyr)
library(readr)
library(ggplot2)
library(tidyr)
library(stringr)
# Carregar os dados
cursos <- readr::read_csv(normalizePath("..\\Dados Lab1\\cursos-prouni.csv"))
estados <- readr::read_csv(normalizePath("..\\Dados Lab1\\estados.csv"))
# Combinar as tabelas
dados_combinados <- left_join(cursos, estados, by = c("uf_busca" = "subdivision"))
# Filtrar cursos tecnológicos (buscando a palavra "Tecnológico" na coluna grau)
dados_filtros <- dados_combinados %>%
filter(str_detect(grau, "Tecnológico", negate = FALSE))
# Calcular o total de bolsas por modalidade e curso
dados_bolsas_modalidade <- dados_filtros %>%
gather(key = "modalidade", value = "total_bolsas",
bolsa_integral_cotas, bolsa_integral_ampla,
bolsa_parcial_cotas, bolsa_parcial_ampla) %>%
group_by(nome, modalidade) %>%
summarise(total_bolsas_modalidade = sum(total_bolsas, na.rm = TRUE)) %>%
ungroup()
# Calcular o total de bolsas por curso
dados_bolsas_total <- dados_bolsas_modalidade %>%
group_by(nome) %>%
summarise(total_bolsas_total = sum(total_bolsas_modalidade, na.rm = TRUE), .groups = "drop")
# Calcular o percentual de bolsas por modalidade em relação ao total de bolsas por curso
dados_bolsas_modalidade <- dados_bolsas_modalidade %>%
left_join(dados_bolsas_total, by = "nome") %>%
mutate(percentual_bolsas = (total_bolsas_modalidade / total_bolsas_total) * 100)
# Exibir a tabela com os percentuais
dados_bolsas_modalidade %>%
select(nome, modalidade, percentual_bolsas) %>%
arrange(desc(percentual_bolsas)) %>%
kable(format = "html", caption = "Percentual de Bolsas por Modalidade para Cursos Tecnológicos") %>%
kable_styling(
full_width = FALSE,
position = "center",
font_size = 16,
bootstrap_options = c("striped", "hover", "condensed")
) %>%
column_spec(1, bold = TRUE, color = "white", background = "#0073e6") %>%
column_spec(2, bold = TRUE, color = "black", background = "#f2f2f2") %>%
column_spec(3, bold = TRUE, color = "black", background = "#f2f2f2") %>%
row_spec(0, bold = TRUE, font_size = 18, color = "black", background = "#e6e6e6")
# Carregar as bibliotecas necessárias
library(dplyr)
library(readr)
library(ggplot2)
library(tidyr)
library(stringr)
# Carregar os dados
cursos <- readr::read_csv(normalizePath("..\\Dados Lab1\\cursos-prouni.csv"))
estados <- readr::read_csv(normalizePath("..\\Dados Lab1\\estados.csv"))
# Combinar as tabelas
dados_combinados <- left_join(cursos, estados, by = c("uf_busca" = "subdivision"))
# Filtrar cursos tecnológicos (buscando a palavra "Tecnológico" na coluna grau)
dados_filtros <- dados_combinados %>%
filter(str_detect(grau, "Tecnológico", negate = FALSE))
# Calcular o total de bolsas por modalidade e curso
dados_bolsas_modalidade <- dados_filtros %>%
gather(key = "modalidade", value = "total_bolsas",
bolsa_integral_cotas, bolsa_integral_ampla,
bolsa_parcial_cotas, bolsa_parcial_ampla) %>%
group_by(nome, modalidade) %>%
summarise(total_bolsas_modalidade = sum(total_bolsas, na.rm = TRUE)) %>%
ungroup()
# Calcular o total de bolsas por curso
dados_bolsas_total <- dados_bolsas_modalidade %>%
group_by(nome) %>%
summarise(total_bolsas_total = sum(total_bolsas_modalidade, na.rm = TRUE), .groups = "drop")
# Calcular o percentual de bolsas por modalidade em relação ao total de bolsas por curso
dados_bolsas_modalidade <- dados_bolsas_modalidade %>%
left_join(dados_bolsas_total, by = "nome") %>%
mutate(percentual_bolsas = (total_bolsas_modalidade / total_bolsas_total) * 100)
# Criar gráfico de barras para visualizar os percentuais de bolsas por modalidade
ggplot(dados_bolsas_modalidade, aes(x = modalidade, y = percentual_bolsas, fill = modalidade)) +
geom_bar(stat = "identity", show.legend = FALSE) +
facet_wrap(~ nome) +
labs(
title = "Percentual de Bolsas por Modalidade para Cursos Tecnológicos",
x = "Modalidade",
y = "Percentual de Bolsas (%)"
) +
theme_minimal() +
theme(axis.title = element_text(size = 12), axis.text = element_text(size = 10)) +
scale_fill_brewer(palette = "Set3")
# Carregar as bibliotecas necessárias
library(dplyr)
library(readr)
library(ggplot2)
library(tidyr)
library(stringr)
# Carregar os dados
cursos <- readr::read_csv(normalizePath("..\\Dados Lab1\\cursos-prouni.csv"))
estados <- readr::read_csv(normalizePath("..\\Dados Lab1\\estados.csv"))
# Combinar as tabelas
dados_combinados <- left_join(cursos, estados, by = c("uf_busca" = "subdivision"))
# Filtrar cursos tecnológicos (buscando a palavra "Tecnológico" na coluna grau)
dados_filtros <- dados_combinados %>%
filter(str_detect(grau, "Tecnológico", negate = FALSE))
# Calcular o total de bolsas por modalidade e curso
dados_bolsas_modalidade <- dados_filtros %>%
gather(key = "modalidade", value = "total_bolsas",
bolsa_integral_cotas, bolsa_integral_ampla,
bolsa_parcial_cotas, bolsa_parcial_ampla) %>%
group_by(nome, modalidade) %>%
summarise(total_bolsas_modalidade = sum(total_bolsas, na.rm = TRUE)) %>%
ungroup()
# Calcular o total de bolsas por curso
dados_bolsas_total <- dados_bolsas_modalidade %>%
group_by(nome) %>%
summarise(total_bolsas_total = sum(total_bolsas_modalidade, na.rm = TRUE), .groups = "drop")
# Calcular o percentual de bolsas por modalidade em relação ao total de bolsas por curso
dados_bolsas_modalidade <- dados_bolsas_modalidade %>%
left_join(dados_bolsas_total, by = "nome") %>%
mutate(percentual_bolsas = (total_bolsas_modalidade / total_bolsas_total) * 100)
# Carregar as bibliotecas necessárias
library(dplyr)
library(readr)
library(ggplot2)
library(tidyr)
library(stringr)
# Carregar os dados
cursos <- readr::read_csv(normalizePath("..\\Dados Lab1\\cursos-prouni.csv"))
estados <- readr::read_csv(normalizePath("..\\Dados Lab1\\estados.csv"))
# Combinar as tabelas
dados_combinados <- left_join(cursos, estados, by = c("uf_busca" = "subdivision"))
# Filtrar cursos tecnológicos (buscando a palavra "Tecnológico" na coluna grau)
dados_filtros <- dados_combinados %>%
filter(str_detect(grau, "Tecnológico", negate = FALSE))
# Calcular o total de bolsas por modalidade e curso
dados_bolsas_modalidade <- dados_filtros %>%
gather(key = "modalidade", value = "total_bolsas",
bolsa_integral_cotas, bolsa_integral_ampla,
bolsa_parcial_cotas, bolsa_parcial_ampla) %>%
group_by(nome, modalidade) %>%
summarise(total_bolsas_modalidade = sum(total_bolsas, na.rm = TRUE)) %>%
ungroup()
# Calcular o total de bolsas por curso
dados_bolsas_total <- dados_bolsas_modalidade %>%
group_by(nome) %>%
summarise(total_bolsas_total = sum(total_bolsas_modalidade, na.rm = TRUE), .groups = "drop")
# Calcular o percentual de bolsas por modalidade em relação ao total de bolsas por curso
dados_bolsas_modalidade <- dados_bolsas_modalidade %>%
left_join(dados_bolsas_total, by = "nome") %>%
mutate(percentual_bolsas = (total_bolsas_modalidade / total_bolsas_total) * 100)
# Exibir a tabela com os percentuais
dados_bolsas_modalidade %>%
select(nome, modalidade, percentual_bolsas) %>%
arrange(desc(percentual_bolsas)) %>%
kable(format = "html", caption = "Percentual de Bolsas por Modalidade para Cursos Tecnológicos") %>%
kable_styling(
full_width = FALSE,
position = "center",
font_size = 16,
bootstrap_options = c("striped", "hover", "condensed")
) %>%
column_spec(1, bold = TRUE, color = "white", background = "#0073e6") %>%
column_spec(2, bold = TRUE, color = "black", background = "#f2f2f2") %>%
column_spec(3, bold = TRUE, color = "black", background = "#f2f2f2") %>%
row_spec(0, bold = TRUE, font_size = 18, color = "black", background = "#e6e6e6")
installed.packages("knitr")
# Carregar as bibliotecas necessárias
library(dplyr)
library(readr)
library(ggplot2)
library(tidyr)
library(stringr)
# Carregar os dados
cursos <- readr::read_csv(normalizePath("..\\Dados Lab1\\cursos-prouni.csv"))
estados <- readr::read_csv(normalizePath("..\\Dados Lab1\\estados.csv"))
# Combinar as tabelas
dados_combinados <- left_join(cursos, estados, by = c("uf_busca" = "subdivision"))
# Filtrar cursos tecnológicos (buscando a palavra "Tecnológico" na coluna grau)
dados_filtros <- dados_combinados %>%
filter(str_detect(grau, "Tecnológico", negate = FALSE))
# Calcular o total de bolsas por modalidade e curso
dados_bolsas_modalidade <- dados_filtros %>%
gather(key = "modalidade", value = "total_bolsas",
bolsa_integral_cotas, bolsa_integral_ampla,
bolsa_parcial_cotas, bolsa_parcial_ampla) %>%
group_by(nome, modalidade) %>%
summarise(total_bolsas_modalidade = sum(total_bolsas, na.rm = TRUE)) %>%
ungroup()
# Calcular o total de bolsas por curso
dados_bolsas_total <- dados_bolsas_modalidade %>%
group_by(nome) %>%
summarise(total_bolsas_total = sum(total_bolsas_modalidade, na.rm = TRUE), .groups = "drop")
# Calcular o percentual de bolsas por modalidade em relação ao total de bolsas por curso
dados_bolsas_modalidade <- dados_bolsas_modalidade %>%
left_join(dados_bolsas_total, by = "nome") %>%
mutate(percentual_bolsas = (total_bolsas_modalidade / total_bolsas_total) * 100)
# Exibir a tabela com os percentuais
library(knitr)
# Exibir a tabela com formatação básica kable
dados_bolsas_modalidade %>%
select(nome, modalidade, percentual_bolsas) %>%
arrange(desc(percentual_bolsas)) %>%
kable(format = "html", caption = "Percentual de Bolsas por Modalidade para Cursos Tecnológicos")
# Criar gráfico de barras para visualizar os percentuais de bolsas por modalidade
ggplot(dados_bolsas_modalidade, aes(x = modalidade, y = percentual_bolsas, fill = modalidade)) +
geom_bar(stat = "identity", show.legend = FALSE) +
facet_wrap(~ nome) +
labs(
title = "Percentual de Bolsas por Modalidade para Cursos Tecnológicos",
x = "Modalidade",
y = "Percentual de Bolsas (%)"
) +
theme_minimal() +
theme(axis.title = element_text(size = 12), axis.text = element_text(size = 10)) +
scale_fill_brewer(palette = "Set3")
# Carregar as bibliotecas necessárias
library(dplyr)
library(readr)
library(ggplot2)
library(tidyr)
library(stringr)
# Carregar os dados
cursos <- readr::read_csv(normalizePath("..\\Dados Lab1\\cursos-prouni.csv"))
estados <- readr::read_csv(normalizePath("..\\Dados Lab1\\estados.csv"))
# Combinar as tabelas
dados_combinados <- left_join(cursos, estados, by = c("uf_busca" = "subdivision"))
# Filtrar cursos tecnológicos (buscando a palavra "Tecnológico" na coluna grau)
dados_filtros <- dados_combinados %>%
filter(str_detect(grau, "Tecnológico", negate = FALSE))
# Calcular o total de bolsas por modalidade e curso
dados_bolsas_modalidade <- dados_filtros %>%
gather(key = "modalidade", value = "total_bolsas",
bolsa_integral_cotas, bolsa_integral_ampla,
bolsa_parcial_cotas, bolsa_parcial_ampla) %>%
group_by(nome, modalidade) %>%
summarise(total_bolsas_modalidade = sum(total_bolsas, na.rm = TRUE)) %>%
ungroup()
# Calcular o total de bolsas por curso
dados_bolsas_total <- dados_bolsas_modalidade %>%
group_by(nome) %>%
summarise(total_bolsas_total = sum(total_bolsas_modalidade, na.rm = TRUE), .groups = "drop")
# Calcular o percentual de bolsas por modalidade em relação ao total de bolsas por curso
dados_bolsas_modalidade <- dados_bolsas_modalidade %>%
left_join(dados_bolsas_total, by = "nome") %>%
mutate(percentual_bolsas = (total_bolsas_modalidade / total_bolsas_total) * 100)
# Exibir a tabela com os percentuais
library(knitr)
# Exibir a tabela com formatação básica kable
dados_bolsas_modalidade %>%
select(nome, modalidade, percentual_bolsas) %>%
arrange(desc(percentual_bolsas)) %>%
kable(format = "html", caption = "Percentual de Bolsas por Modalidade para Cursos Tecnológicos")
# Carregar as bibliotecas necessárias
library(dplyr)
library(readr)
library(ggplot2)
library(tidyr)
library(stringr)
# Carregar os dados
cursos <- readr::read_csv(normalizePath("..\\Dados Lab1\\cursos-prouni.csv"))
estados <- readr::read_csv(normalizePath("..\\Dados Lab1\\estados.csv"))
# Combinar as tabelas
dados_combinados <- left_join(cursos, estados, by = c("uf_busca" = "subdivision"))
# Filtrar cursos tecnológicos (buscando a palavra "Tecnológico" na coluna grau)
dados_filtros <- dados_combinados %>%
filter(str_detect(grau, "Tecnológico", negate = FALSE))
head(dados_filtros)
# Calcular o total de bolsas por modalidade e curso
dados_bolsas_modalidade <- dados_filtros %>%
gather(key = "modalidade", value = "total_bolsas",
bolsa_integral_cotas, bolsa_integral_ampla,
bolsa_parcial_cotas, bolsa_parcial_ampla) %>%
group_by(nome, modalidade) %>%
summarise(total_bolsas_modalidade = sum(total_bolsas, na.rm = TRUE)) %>%
ungroup()
# Calcular o total de bolsas por curso
dados_bolsas_total <- dados_bolsas_modalidade %>%
group_by(nome) %>%
summarise(total_bolsas_total = sum(total_bolsas_modalidade, na.rm = TRUE), .groups = "drop")
# Calcular o percentual de bolsas por modalidade em relação ao total de bolsas por curso
dados_bolsas_modalidade <- dados_bolsas_modalidade %>%
left_join(dados_bolsas_total, by = "nome") %>%
mutate(percentual_bolsas = (total_bolsas_modalidade / total_bolsas_total) * 100)
# Exibir a tabela com os percentuais
library(knitr)
# Exibir a tabela com formatação básica kable
dados_bolsas_modalidade %>%
select(nome, modalidade, percentual_bolsas) %>%
arrange(desc(percentual_bolsas)) %>%
kable(format = "html", caption = "Percentual de Bolsas por Modalidade para Cursos Tecnológicos")
# Carregar as bibliotecas necessárias
library(dplyr)
library(readr)
library(ggplot2)
library(tidyr)
library(stringr)
library(kableExtra)
library(knitr)
# Carregar os dados
cursos <- readr::read_csv(normalizePath("..\\Dados Lab1\\cursos-prouni.csv"))
estados <- readr::read_csv(normalizePath("..\\Dados Lab1\\estados.csv"))
# Combinar as tabelas
dados_combinados <- left_join(cursos, estados, by = c("uf_busca" = "subdivision"))
cursos_interesse_tec <- dados_combinados %>%
filter(nome %in% c("Ciência da Computação", "Engenharia da Computação", "Sistemas de Informação")) %>%
filter(str_detect(grau, "Tecnológico", negate = FALSE))
# Agrupar por nome do curso e modalidades (ajuste as colunas de modalidade conforme seus dados)
bolsas_tec_modalidade <- cursos_interesse_tec %>%
group_by(nome, turno, tipo_atendimento) %>% # <------------------- Ajuste aqui as colunas de modalidade
summarise(total_bolsas = n(), .groups = 'drop')
